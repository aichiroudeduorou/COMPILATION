.386     
.model flat, stdcall
 ExitProcess PROTO STDCALL :DWORD
 includelib  kernel32.lib  ; ExitProcess 在 kernel32.lib中实现
 printf          PROTO C :VARARG
 scanf           PROTO C :VARARG
 includelib  libcmt.lib
 includelib  legacy_stdio_definitions.lib
.DATA
OP DB '0',0
CFMT DB "%c",0
LPFMT DB "%s",0AH,0DH,0
INFORNEGFMT DB "%s",0
INLFMT DB "%s\0",0
INPSWDFMT DB "%10s\0",0
INNAMEFMT DB "%8s\0",0
INNUMFMT DB "%d",0
OUTPROFITFMT DB "%d%%",0AH,0DH,0
INFORFMT DB "%s %d",0AH,0DH,0
SHOPNAME DB '---------ONLINE SHOP---------',0
MENULINE DB '--------------MENU---------------',0
INFOR1 DB 'THE PURCHASING COST IS:',0
INFOR2 DB 'THE SELLING PRICE IS:',0
INFOR3 DB 'THE PURCHASE QUANTITY IS:',0
INFOR4 DB 'THE SOLD QUANTITY IS:',0
INFOR5 DB 'THE PROFIT BARGIN IS:',0
LOGNAME DB 'PLEASE INPUT YOUR NAME:',0
LOGPSWD DB 'PLEASE INPUT YOUR PASSWORD:',0
BUF1 DB 'PLEASE INPUT YOUR OPTION (1~9):',0
BUF2 DB 'PLEASE INPUT YOUR WANTED GOOD:' ,0
OUTLINE DB 'PLEASE INPUT THE SELLING QUANTITY:',0
INLINE DB 'PLEASE INPPUT THE PURCHASING QUANTITY:',0
MENU1 DB '1.FIND GOOD AND SHOW INFORMATION',0
MENU2 DB '2.SHIPMENT',0
MENU3 DB '3.REPLENISHMENT',0
MENU4 DB '4.CALCULATE PROFIT MARGIN',0
MENU5 DB '5.SHOW INFORMATION ACCORDING TO PROFIT(HIGH TO LOW)',0
MENU9 DB '9.EXIST$',0
WRONGNAME DB 'USER NOT EXISTS!',0
WRONGPSWD DB 'PASSWORD WRONG!',0
WRONGOPTION DB 'PLEASE CHECK YOUR OPTION!',0
WRONGGOODLINE DB 'GOOD NOT EXISTS!',0
WRONGOUT DB 'GOOD NOT ENOUGH!',0
OPERATESUCC DB 'OPERATE SUCCESSFULLY!',0
CORRECTPSWD DB 'SUCESSFULLY LOG IN!',0
BNAME  DB  'FANZEJUN',0  ;老板姓名（要求必须是自己名字的拼音）
NAMELEN DD $-BNAME-1
BPASS  DB  'U201915186',0  ;密码（必须是自己的学号）
PSWDLEN DD $-BPASS-1
N    EQU   30
GA1   DB   'PEN', 7 DUP(0)  ;商品1 名称
      DW   15,20,70,25,?  ; 进货价、销售价、进货数量、已售数量,利润率（尚未计算）
GA2   DB  'PENCIL', 4 DUP(0) ;商品2 名称
      DW   2,3,100,50,?
GA3   DB   'BOOK', 6 DUP(0) ;商品3 名称
      DW   30,40,25,5,?
GA4   DB   'RULER',5 DUP(0)  ;商品4 名称
      DW   3,4,200,150,?
GAN   DB N-4 DUP( 'TempValue' ,0,15,0,20,0,30,0,2,0,?,?) ;除了4个已经具体定义了的商品信息以外,其他商品信息暂时假定为一样的。
;following the input buffer
IN_NAME DB 20 DUP(0);INPUT NAME BUFFER
IN_PSWD DB 20 DUP(0);INPUT PASSWORD BUFFER
IN_GOOD	DB 20 DUP(0);INPUT GOOD BUFFER
IN_OPTION DB 1 DUP(0);INPUT OPTION
OUTQUA DW 2 DUP(0)
INQUA DW 2 DUP(0)
.STACK
	DB 200 DUP(0)
.CODE
main proc c	
LOGIN:
	;LOGIN
	INVOKE printf,OFFSET LPFMT,OFFSET SHOPNAME
	INVOKE printf,OFFSET LPFMT,OFFSET LOGNAME
	INVOKE scanf,OFFSET INNAMEFMT,OFFSET IN_NAME
	INVOKE printf,OFFSET LPFMT,OFFSET LOGPSWD
	INVOKE scanf,OFFSET INPSWDFMT,OFFSET IN_PSWD
	JMP CHECKNAME
	;显示菜单
MENU:
	INVOKE printf,OFFSET LPFMT,OFFSET MENULINE
	INVOKE printf,OFFSET LPFMT,OFFSET MENU1
	INVOKE printf,OFFSET LPFMT,OFFSET MENU2
	INVOKE printf,OFFSET LPFMT,OFFSET MENU3
	INVOKE printf,OFFSET LPFMT,OFFSET MENU4
	INVOKE printf,OFFSET LPFMT,OFFSET MENU5
	INVOKE printf,OFFSET LPFMT,OFFSET MENU9
	INVOKE printf,OFFSET LPFMT,OFFSET BUF1
	INVOKE scanf,OFFSET INNUMFMT,OFFSET IN_OPTION
	CMP IN_OPTION,1
	JZ INPUTGOODNAME
	CMP IN_OPTION,2
	JZ SHIPMENT
	CMP IN_OPTION,3
	JZ REPLENISHMENT
	CMP IN_OPTION,4
	JZ PROFIT
	;CMP IN_OPTION,5
	;JZ SORT
	CMP IN_OPTION,9
	JZ EXIT
EXIT:
	INVOKE ExitProcess,0

WRONGNAMEINPUT:
	INVOKE printf,OFFSET LPFMT,OFFSET WRONGNAME
	INVOKE ExitProcess,0
CHECKNAME:
	MOV ESI,OFFSET IN_NAME
	MOV EDI,OFFSET BNAME
	MOV ECX,0
NAMELOOP:
	MOV AL,[ESI]
	MOV BL,[EDI]
	CMP AL,BL
	JNE WRONGNAMEINPUT
	INC ESI
	INC EDI
	INC ECX
	CMP ECX,NAMELEN
	JNZ NAMELOOP
	JMP CHECKPSWD
WRONGPSWDINPUT:
	INVOKE printf,OFFSET LPFMT,OFFSET WRONGPSWD
	INVOKE ExitProcess,0
CHECKPSWD:
	MOV ESI,OFFSET IN_PSWD
	MOV EDI,OFFSET BPASS
	MOV ECX,0
PSWDLOOP:
	MOV AL,[ESI]
	MOV BL,[EDI]
	CMP AL,BL
	JNE WRONGPSWDINPUT
	INC ESI
	INC EDI
	INC ECX
	CMP ECX,PSWDLEN
	JNZ PSWDLOOP
	JMP CORRECTLOG
CORRECTLOG:
	INVOKE printf,OFFSET LPFMT,OFFSET CORRECTPSWD
	JMP MENU

PROFIT:
	MOV ESI,OFFSET GA1
	CALL CACULATE
	CALL SHOWPROFIT
	MOV ESI,OFFSET GA2
	CALL CACULATE
	CALL SHOWPROFIT
	MOV ESI,OFFSET GA3
	CALL CACULATE
	CALL SHOWPROFIT
	MOV ESI,OFFSET GA4
	CALL CACULATE
	CALL SHOWPROFIT
	INVOKE printf,OFFSET LPFMT,OFFSET OPERATESUCC
	JMP MENU
CACULATE:
	MOVSX EAX,WORD PTR [ESI]+10
	MOVSX ECX,WORD PTR [ESI]+14
	IMUL EAX,ECX
	MOV EBX,EAX   ;EBX COST
	MOVSX EAX,WORD PTR [ESI]+12
	MOVSX ECX,WORD PTR [ESI]+16
	IMUL EAX,ECX     ;EAX SOLD
	SUB EAX,EBX
	IMUL EAX,EAX,100
	CDQ
	IDIV EBX
	MOV WORD PTR [ESI]+18,AX
	;INVOKE printf,OFFSET INFORFMT,OFFSET INFOR1,WORD PTR [ESI]+18  ;see test.asm
	RET
SHOWPROFIT:
	MOV AX,WORD PTR [ESI]+18
	SHL AX,1
	JC FUSHU
	INVOKE printf,OFFSET INFORFMT,OFFSET INFOR4,WORD PTR [ESI]+18
	RET
FUSHU:
	NEG WORD PTR [ESI]+18
	MOV EDI,OFFSET OP
	MOV BYTE PTR [EDI],'-'
	INVOKE printf,OFFSET INFORNEGFMT,OFFSET INFOR4
	INVOKE printf,OFFSET CFMT,BYTE PTR [EDI]
	INVOKE printf,OFFSET OUTPROFITFMT,WORD PTR [ESI]+18
	RET

WRONGGOOD:
	INVOKE printf,OFFSET LPFMT,OFFSET WRONGGOODLINE
	JMP MENU
FINDGOODNEXT:
	CMP IN_OPTION,1
	JZ SHOWGOODINFORMATION
	CMP IN_OPTION,2
	JZ OUTINFORCHANGE
	CMP IN_OPTION,3
	JZ ININFORCHANGE

NOTENOUGH:
	INVOKE printf,OFFSET LPFMT,OFFSET WRONGOUT
	JMP MENU
OUTINFORCHANGE:
	MOV AX,WORD PTR [ESI]+14
	SUB AX,WORD PTR [ESI]+16
	CMP AX,OUTQUA
	JB NOTENOUGH
	MOV AX,OUTQUA
	ADD WORD PTR [ESI]+16,AX
	CALL CACULATE
	INVOKE printf,OFFSET LPFMT,OFFSET OPERATESUCC
	JMP MENU
SHIPMENT:
	INVOKE printf,OFFSET LPFMT,OFFSET BUF2
	INVOKE scanf,OFFSET INLFMT,OFFSET IN_GOOD
	INVOKE printf,OFFSET LPFMT,OFFSET OUTLINE
	INVOKE scanf,OFFSET INNUMFMT,OFFSET OUTQUA
	JMP CHECKGOOD

ININFORCHANGE:
	MOV AX,INQUA
	ADD WORD PTR [ESI]+14,AX
	CALL CACULATE
	INVOKE printf,OFFSET LPFMT,OFFSET OPERATESUCC
	JMP MENU
REPLENISHMENT:
	INVOKE printf,OFFSET LPFMT,OFFSET BUF2
	INVOKE scanf,OFFSET INLFMT,OFFSET IN_GOOD
	INVOKE printf,OFFSET LPFMT,OFFSET INLINE
	INVOKE scanf,OFFSET INNUMFMT,OFFSET INQUA
	JMP CHECKGOOD

INPUTGOODNAME:
	INVOKE printf,OFFSET LPFMT,OFFSET BUF2
	INVOKE scanf,OFFSET INLFMT,OFFSET IN_GOOD
	JMP CHECKGOOD

SHOWGOODINFORMATION:
	INVOKE printf,OFFSET INFORFMT,OFFSET INFOR1,WORD PTR [ESI]+10
	INVOKE printf,OFFSET INFORFMT,OFFSET INFOR2,WORD PTR [ESI]+12
	INVOKE printf,OFFSET INFORFMT,OFFSET INFOR3,WORD PTR [ESI]+14
	INVOKE printf,OFFSET INFORFMT,OFFSET INFOR4,WORD PTR [ESI]+16
	JMP MENU

CHECKGOOD:
CHECKGOOD1:
	MOV ESI,OFFSET IN_GOOD
	MOV EDI,OFFSET GA1
	MOV  ECX,0
GOOD1LOOP:
	MOV AL,[ESI]
	MOV BL,[EDI]
	CMP AL,BL
	JNE CHECKGOOD2
	INC ESI
	INC EDI
	INC ECX
	CMP ECX,3
	JNZ GOOD1LOOP
	MOV ESI,OFFSET GA1
	JMP FINDGOODNEXT
CHECKGOOD2:
	MOV ESI,OFFSET IN_GOOD
	MOV EDI,OFFSET GA2
	MOV ECX,0
GOOD2LOOP:
	MOV AL,[ESI]
	MOV BL,[EDI]
	CMP AL,BL
	JNE CHECKGOOD3
	INC ESI
	INC EDI
	INC ECX
	CMP ECX,6
	JNZ GOOD2LOOP
	MOV ESI,OFFSET GA2
	JMP FINDGOODNEXT
CHECKGOOD3:
	MOV ESI,OFFSET IN_GOOD
	MOV EDI,OFFSET GA3
	MOV ECX,0
GOOD3LOOP:
	MOV AL,[ESI]
	MOV BL,[EDI]
	CMP AL,BL
	JNE CHECKGOOD4
	INC ESI
	INC EDI
	INC ECX
	CMP ECX,4
	JNZ GOOD3LOOP
	MOV ESI,OFFSET GA3
	JMP FINDGOODNEXT
CHECKGOOD4:
	MOV ESI,OFFSET IN_GOOD
	MOV EDI,OFFSET GA4
	MOV ECX,0
GOOD4LOOP:
	MOV AL,[ESI]
	MOV BL,[EDI]
	CMP AL,BL
	JNE WRONGGOOD
	INC ESI
	INC EDI
	INC ECX
	CMP ECX,5
	JNZ GOOD4LOOP
	MOV ESI,OFFSET GA4
	JMP FINDGOODNEXT
main endp
end